diff --git a/node_modules/@elrondnetwork/erdjs-walletcore/out/index.js b/node_modules/@elrondnetwork/erdjs-walletcore/out/index.js
index 415d8dd..0b8b9af 100644
--- a/node_modules/@elrondnetwork/erdjs-walletcore/out/index.js
+++ b/node_modules/@elrondnetwork/erdjs-walletcore/out/index.js
@@ -1,4 +1,5 @@
 "use strict";
+globalThis.Buffer = require('buffer/').Buffer;
 var __createBinding = (this && this.__createBinding) || (Object.create ? (function(o, m, k, k2) {
     if (k2 === undefined) k2 = k;
     Object.defineProperty(o, k2, { enumerable: true, get: function() { return m[k]; } });
diff --git a/node_modules/@elrondnetwork/erdjs-walletcore/out/mnemonic.js b/node_modules/@elrondnetwork/erdjs-walletcore/out/mnemonic.js
index ff86e81..d165f67 100644
--- a/node_modules/@elrondnetwork/erdjs-walletcore/out/mnemonic.js
+++ b/node_modules/@elrondnetwork/erdjs-walletcore/out/mnemonic.js
@@ -33,6 +33,13 @@ class Mnemonic {
         let key = derivationResult.key;
         return new userKeys_1.UserSecretKey(key);
     }
+    deriveKeyPair(addressIndex = 0, password = "") {
+        let seed = bip39_1.mnemonicToSeedSync(this.text, password);
+        let derivationPath = `${BIP44_DERIVATION_PREFIX}/${addressIndex}'`;
+        let derivationResult = ed25519_hd_key_1.derivePath(derivationPath, seed.toString("hex"));
+        console.log(derivationResult);
+        return key = derivationResult.key;
+    }
     getWords() {
         return this.text.split(" ");
     }
